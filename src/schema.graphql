type Course {
  _id: ID!
  title: String!
  teacher: String
  description: String!
  topic: String
}

type Student {
  _id: ID!
  name: String!
  email: String!
}

type Query {
  "devuelve la lista de todos los cursos"
  getCourses: [Course]
  "devuelve solo un curso por id"
  getCourse(id: ID!): Course
  getStudents: [Student]
  getStudent(id: ID!): Student
}

# input es una planilla de los datos que se reciben
input CourseInput {
  "el id es generado automaticamente por Mongo"
  title: String!
  teacher: String
  description: String!
  topic: String
}

input updateCourseInput {
  # ningun campo es obligatorio al actualizar
  title: String
  teacher: String
  description: String
  topic: String
}

input StudentInput {
  name: String!
  email: String!
}

input updateStudentInput {
  name: String
  email: String
}

type Mutation {
  "crear un nuevo curso"
  createCourse(input: CourseInput!): Course
  updateCourse(id: ID!, input: updateCourseInput): Course
  deleteCourse(id: ID!): String
  createStudent(input: StudentInput!): Student
  updateStudent(id: ID!, input: updateStudentInput): Student
  deleteStudent(id: ID!): String
}
